*** Settings ***
Documentation     Test Python Scripts for starting and stopping Smallworld Magik images, delivered with robotframework magik
Library           OperatingSystem
Library           Process
Library           String

*** Variables ***
${START_IMAGE_SCRIPT}    ${CURDIR}${/}..${/}..${/}scripts${/}robot_start_magik_image.py    # script under test for starting magik images
${STOP_IMAGE_SCRIPT}    ${CURDIR}${/}..${/}..${/}scripts${/}robot_stop_magik_image.py    # script under test for starting magik images
${DUMMY_LAUNCHER}    ${CURDIR}${/}dummy_gis_launcher.py
${RF_LOG_STDOUT}    ${CURDIR}${/}rf_stdout.log
${RF_LOG_STDERR}    ${CURDIR}${/}rf_stderr.log

*** Test Cases ***
Start Image Script without args
    ${result}=    Run Process    python    ${START_IMAGE_SCRIPT}
    Log    ${result.stderr}
    Should Be Equal As Integers    ${result.rc}    2
    Should Contain    ${result.stderr}    too few arguments

Start Image Script with -h
    ${result}=    Run Process    python    ${START_IMAGE_SCRIPT}    -h
    Log    ${result.stdout}
    Should Be Equal As Integers    ${result.rc}    0
    Should Contain    ${result.stdout}    starts a Magik image and activates the remote cli
    Should Contain    ${result.stdout}    swproduct alias
    Should Contain    ${result.stdout}    -h, --help
    Should Contain    ${result.stdout}    --aliasfile ALIASFILE
    Should Contain    ${result.stdout}    --cli_port CLI_PORT
    Should Contain    ${result.stdout}    --piddir PIDDIR
    Should Contain    ${result.stdout}    --logdir LOGDIR
    Should Contain    ${result.stdout}    --login LOGIN
    Should Contain    ${result.stdout}    --script SCRIPT
    Should Contain    ${result.stdout}    --msf_startup
    Should Contain    ${result.stdout}    --wait WAIT
    Should Contain    ${result.stdout}    --test_launch TEST_LAUNCH

Stop Image Script with -h
    ${result}=    Run Process    python    ${STOP_IMAGE_SCRIPT}    -h
    Log    ${result.stdout}
    Should Be Equal As Integers    ${result.rc}    0
    Should Contain    ${result.stdout}    stops a Magik image and his remote cli
    Should Contain    ${result.stdout}    -h, --help
    Should Contain    ${result.stdout}    --cli_port CLI_PORT
    Should Contain    ${result.stdout}    --piddir PIDDIR

Start Image Script - not reachable via telnet
    [Tags]    dummyLaunch    noTelnet
    ${result}=    Run Process    python    ${START_IMAGE_SCRIPT}    --wait    0.5    --test_launch
    ...    ${CURDIR}${/}dummy_gis_launcher.py    A_SWPRODUCT    A_ALIAS
    Log    ${result.stdout}
    Should Contain    ${result.stderr}    Image is NOT reachable via telnet localhost:14001
    Should Be Equal As Integers    ${result.rc}    1

Start Image Script with default settings
    [Tags]    dummyLaunch    withTelnet
    ${alias}=    Set Variable    ALIAS_start_telnet
    ${result}=    Run Process    python    ${START_IMAGE_SCRIPT}    --wait    0.1    --test_launch
    ...    ${CURDIR}${/}dummy_gis_launcher.py    A_SWPRODUCT    ${alias}
    Should Be Equal As Integers    ${result.rc}    0
    ${robot_magik_dir}=    Normalize Path    ${CURDIR}${/}..${/}..
    Should Contain    ${result.stdout}    ROBOT_MAGIK_DIR=${robot_magik_dir}
    Should Contain    ${result.stdout}    ROBOT_CLI_PORT=14001
    Should Contain    ${result.stdout}    SW_MSF_STARTUP_MAGIK=None
    ${robot_magik_script}=    Normalize Path    ${robot_magik_dir}${/}scripts${/}start_robot_remote_cli.script
    Should Contain    ${result.stdout}    -run_script ${robot_magik_script}
    Should Contain    ${result.stdout}    -i ${alias} ${TEMPDIR}
    ${robot_temp_dir}=    Normalize Path    ${TEMPDIR}${/}robot_magik
    Directory Should Exist    ${robot_temp_dir}
    Should Contain    ${result.stdout}    -l ${robot_temp_dir}${/}${alias}
    File Should Exist    ${robot_temp_dir}${/}14001.pid
    ${pid_info}=    Get File    ${robot_temp_dir}${/}14001.pid
    ${pid}=    Get Line    ${pid_info}    0
    Should Contain    ${result.stdout}    PID=${pid}

Start Image Script with -msf_startup
    [Tags]    dummyLaunch    withTelnet
    ${alias}=    Set Variable    ALIAS_start_telnet
    ${result}=    Run Process    python    ${START_IMAGE_SCRIPT}    --msf_startup    --wait    0.1
    ...    --test_launch    ${CURDIR}${/}dummy_gis_launcher.py    A_SWPRODUCT    ${alias}
    Log    ${result.stdout}
    Should Be Equal As Integers    ${result.rc}    0
    ${robot_magik_dir}=    Normalize Path    ${CURDIR}${/}..${/}..
    Should Contain    ${result.stdout}    ROBOT_MAGIK_DIR=${robot_magik_dir}
    Should Contain    ${result.stdout}    ROBOT_CLI_PORT=14001
    ${robot_magik_script}=    Normalize Path    ${robot_magik_dir}${/}scripts${/}start_robot_remote_cli.magik
    Should Contain    ${result.stdout}    SW_MSF_STARTUP_MAGIK=${robot_magik_script}
    Should Not Contain    ${result.stdout}    -run_script
    Should Contain    ${result.stdout}    -i ${alias} ${TEMPDIR}
    ${robot_temp_dir}=    Normalize Path    ${TEMPDIR}${/}robot_magik
    Directory Should Exist    ${robot_temp_dir}
    Should Contain    ${result.stdout}    -l ${robot_temp_dir}${/}${alias}
    File Should Exist    ${robot_temp_dir}${/}14001.pid
    ${pid_info}=    Get File    ${robot_temp_dir}${/}14001.pid
    ${pid}=    Get Line    ${pid_info}    0
    Should Contain    ${result.stdout}    PID=${pid}

Start Dummy Gis Launcher
    [Tags]    dummyLaunch    blocker
    ${result_start}=    Start Dummy Gis Launcher    alias=ALIAS_start_telnet    cli_port=14002
    Should Be Equal As Integers    ${result_start.rc}    0

stop with default settings
    [Tags]    dummyLaunch    withTelnet    blocker
    ${alias}=    Set Variable    ALIAS_start_telnet
    ${cli_port}=    Set Variable    14002
    ${result_stop}=    Run Process    python    ${STOP_IMAGE_SCRIPT}    --cli_port    ${cli_port}
    Log    ${result_stop.stdout}
    Run Keyword If    ${result_stop.rc}!=0    Log    ${result_stop.stderr}
    Should Be Equal As Integers    ${result_stop.rc}    0

Start and stop with default settings
    [Tags]    dummyLaunch    withTelnet    blocker
    ${alias}=    Set Variable    ALIAS_start_telnet
    ${cli_port}=    Set Variable    14002
    ${handle_start}=    Process.Start Process    python    ${START_IMAGE_SCRIPT}    --wait    0.1    --cli_port
    ...    ${cli_port}    --test_launch    ${CURDIR}${/}dummy_gis_launcher.py    A_SWPRODUCT    ${alias}    stdout=${RF_LOG_STDOUT}
    ...    stderr=${RF_LOG_STDERR
    ${result_stop}=    Run Process    python    ${STOP_IMAGE_SCRIPT}    --cli_port    ${cli_port}
    Log    ${result_stop.stdout}
    Run Keyword If    ${result_stop.rc}!=0    Log    ${result_stop.stderr}
    ${result_start}=    Wait For Process    ${handle_start}    2s
    Log    ${result_start.stdout}
    Run Keyword If    ${result_start.rc}!=0    Log    ${result_start.stderr}
    Should Be Equal As Integers    ${result_start.rc}    0
    Should Be Equal As Integers    ${result_stop.rc}    0

*** Keywords ***
Start Dummy Gis Launcher
    [Arguments]    ${alias}=ALIAS_start_telnet    ${cli_port}=14001    ${wait_telnet}=0.1
    ${wait_process}=    Convert To Number    ${wait_telnet}
    ${wait_process}=    Set Variable    ${wait_process + 1.0}
    ${handle_start}=    Process.Start Process    python    ${START_IMAGE_SCRIPT}    --wait    ${wait_telnet}    --cli_port
    ...    ${cli_port}    --test_launch    ${CURDIR}${/}dummy_gis_launcher.py    A_SWPRODUCT    ${alias}    stdout=${RF_LOG_STDOUT}
    ...    stderr=${RF_LOG_STDERR}
    Log    Process started    console=True
    ${result_start}=    Wait For Process    handle=${handle_start}    timeout=${wait_process}    on_timeout=terminate
    Log    ${result_start.stdout}
    Run Keyword If    ${result_start.rc}!=0    Log    ${result_start.stderr}
    [Return]    ${result_start}
